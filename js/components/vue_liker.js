const liker=new Vue({el:"#app",created(){this.viewerUserId="",this.viewerUserName="",this.csrfToken="",this.startDate=null},mounted:()=>{_gaq.push(["_trackPageview"]),chrome.runtime.onMessage.addListener(e=>{"openLikerPage"===e.action&&(liker.csrfToken=e.csrfToken,liker.delay=e.likeDelay,liker.viewerUserName=e.viewerUserName,liker.viewerUserId=e.viewerUserId,liker.pageSize=e.pageSizeForFeed,liker.userToLike=e.userName===instaDefOptions.you?e.viewerUserName:e.userName)})},data:{p2:!1,isInProgress:!1,amountToLike:100,stopCriterion:"amountPosts",delay:0,rndDelay:10,liked:0,alreadyLiked:0,skippedSuggestedUsers:0,skippedVideo:0,skippedOwnPosts:0,skippedTooFewLike:0,restarted:0,fetched:0,stop:!1,status:"",statusColor:"",log:"",whatToLike:"likeFeed",userToLike:"",hashTagToLike:"",allPostsFetched:!1,skipVideo:!0,skipOwnPosts:!0,minLike:2,restartAfterPause:!1,hoursPerPeriod:1,likesPerPeriod:50,likedPerPeriod:0,periodStarted:null},computed:{isPaused(){return!!this.p2&&(this.likesPerPeriod<=this.likedPerPeriod?(this.updateStatusDiv(`${(new Date).toLocaleString()}/The process will be paused because the likes limit per period is reached: ${this.likesPerPeriod}/${this.likedPerPeriod}`),this.likedPerPeriod=0,!0):(Date.now()-this.periodStarted>60*this.hoursPerPeriod*60*1e3&&(this.updateStatusDiv(`${(new Date).toLocaleString()}/WE ARE GOING TO START A NEW PERIOD EVEN IF AMOUNT OF LIKES IS NOT REACHED: ${this.likesPerPeriod}/${this.likedPerPeriod}`),this.periodStarted=Date.now(),this.likedPerPeriod=0),!1))},isCompleted(){return this.stop?(this.updateStatusDiv(`${(new Date).toLocaleString()}/The process is stopped now because you clicked the Stop button`),!0):"alreadyLiked"===this.stopCriterion&&this.alreadyLiked>0?(this.updateStatusDiv(`${(new Date).toLocaleString()}/The process is stopped because already liked posts are found - ${this.alreadyLiked}`),!0):"amountPosts"===this.stopCriterion&&this.amountToLike<=this.liked?(this.updateStatusDiv(`${(new Date).toLocaleString()}/The process is stopped because ${this.liked} posts were liked`),!0):!("likeProfile"!==this.whatToLike||!this.allPostsFetched)&&(this.updateStatusDiv(`${(new Date).toLocaleString()}/The process is stopped because no more posts to fetch`),!0)},startButtonDisabled(){return this.isInProgress||"likeProfile"===this.whatToLike&&""===this.userToLike||"likeHashTag"===this.whatToLike&&""===this.hashTagToLike}},methods:{calcDelay(){return+Math.floor(Math.random()*this.delay*this.rndDelay/100)+ +this.delay},checkDurationPeriod(){(!this.hoursPerPeriod||this.hoursPerPeriod<1)&&this.$nextTick(()=>this.hoursPerPeriod=1),this.hoursPerPeriod>24&&this.$nextTick(()=>this.hoursPerPeriod=24)},checkLikesPerPeriod(){(!this.likesPerPeriod||this.likesPerPeriod<1)&&this.$nextTick(()=>this.likesPerPeriod=1),this.likesPerPeriod>1e3&&this.$nextTick(()=>this.likesPerPeriod=1e3)},checkDelay(){(!this.delay||this.delay<5e3)&&this.$nextTick(()=>this.delay=5e3)},checkRndDelay(){(!this.rndDelay||this.rndDelay<0)&&this.$nextTick(()=>this.rndDelay=0)},updateStatusDiv(e,t){this.log+=`${e}\n`,this.status=e,this.statusColor=t||"black",setTimeout(()=>{const e=document.getElementById("log_text_area");e.scrollTop=e.scrollHeight},0)},validateUserProfile(e){console.log(e)},getPosts(e,t){e.getPosts(t).then(t=>{this.fetched+=t.length,this.likeMedia(e,t,0)}).catch(e=>{this.updateStatusDiv(e.toString(),"red"),this.isInProgress=!1})},toLike(e){if(!e.node.owner)return this.skippedSuggestedUsers+=1,this.updateStatusDiv("...Post skipped as there is no owner, maybe suggested users..."),!1;const t=e.node.display_url,i=new Date(1e3*e.node.taken_at_timestamp).toLocaleString(),s="likeProfile"===this.whatToLike?this.userToLike:e.node.owner.username?e.node.owner.username:e.node.owner.id,a=e.node.edge_media_preview_like.count;return this.updateStatusDiv(`${!0===e.node.is_video?"Video":"Post"} ${t} taken on ${i} by ${s} has ${a} likes`),e.node.is_video&&e.node.is_video===this.skipVideo?(this.skippedVideo+=1,this.updateStatusDiv("...Post skipped as it is video and video should be skipped..."),!1):s===this.viewerUserName?(this.skippedOwnPosts+=1,this.updateStatusDiv("...Post skipped as it is your post and you own posts should be skipped..."),!1):!(this.minLike>a)||(this.skippedTooFewLike+=1,this.updateStatusDiv(`...Post skipped as it has only ${a} likes, and min allowed ${this.minLike}...`),!1)},calculateDelayForStartingNextPeriod(){this.updateStatusDiv(`${(new Date).toLocaleString()}: Calculating the time to start a new period.`);const e=this.periodStarted+60*this.hoursPerPeriod*60*1e3,t=e-Date.now();return this.updateStatusDiv(`${(new Date).toLocaleString()}: End of this period should be on\n        ${new Date(e).toLocaleString()}/${t}, so we start a new period on that time.`),t},scheduleNextRun(e,t,i,s){this.isCompleted?(this.updateStatusDiv(`Started at ${this.startDate}`),this.updateStatusDiv(`Liked ${this.liked} posts`),this.updateStatusDiv(`Found already liked ${this.alreadyLiked} posts`),this.updateStatusDiv(`Skipped: Suggested Users ${this.skippedSuggestedUsers} posts`),this.updateStatusDiv(`Skipped: Video ${this.skippedVideo} posts`),this.updascheduleNextRunteStatusDiv(`Skipped: Own Posts ${this.skippedOwnPosts} posts`),this.updateStatusDiv(`Skipped: No enough likes - ${this.skippedTooFewLike} posts`),this.updateStatusDiv(`Fetched ${this.fetched} posts`),this.updateStatusDiv(`Fetching feed restarted ${this.restarted} times`),this.updateStatusDiv(`Completed at ${(new Date).toLocaleString()}`),this.isInProgress=!1):this.isPaused?setTimeout(()=>{this.updateStatusDiv(`${(new Date).toLocaleString()}: Starting a new period`),this.periodStarted=Date.now(),"likeProfile"!==this.whatToLike&&this.restartAfterPause?(this.updateStatusDiv(`${(new Date).toLocaleString()}: Restarting the fetching...`),this.restarted+=1,this.getPosts(e,!0)):liker.likeMedia(e,t,i)},this.calculateDelayForStartingNextPeriod()):setTimeout(()=>liker.likeMedia(e,t,i),s)},likeMedia(e,t,i){if(t.length>i){const s=t[i],{id:a}=s.node;this.toLike(s)?e.isNotLiked(s).then(s=>{s?instaLike.like({mediaId:a,csrfToken:this.csrfToken,updateStatusDiv:this.updateStatusDiv,vueStatus:liker}).then(s=>{s?(liker.updateStatusDiv(`...liked post ${++liker.liked} on ${(new Date).toLocaleString()}`),liker.likedPerPeriod+=1):liker.updateStatusDiv("...missing media, proceeding to the next post!"),liker.scheduleNextRun(e,t,++i,liker.calcDelay())}):(this.updateStatusDiv("...and it is already liked by you!"),this.alreadyLiked+=1,this.scheduleNextRun(e,t,++i,0))}):this.scheduleNextRun(e,t,++i,0)}else e.hasMore()?(this.updateStatusDiv(`The more posts will be fetched now...${new Date}`),setTimeout(()=>this.getPosts(e,!1),this.calcDelay())):"likeFeed"===this.whatToLike||"likeHashTag"===this.whatToLike?(this.updateStatusDiv(`IG has returned no more posts, restart ...${new Date}`),this.restarted+=1,setTimeout(()=>this.getPosts(e,!0),this.calcDelay())):(this.allPostsFetched=!0,this.scheduleNextRun(e,t,++i,0))},startButtonClick(){const e={alreadyLiked:"It will be stopped when already liked post is met",amountPosts:`It will be stopped when ${this.amountToLike} posts will be liked.`};let t=new GetPosts({pageSize:this.pageSize,mode:this.whatToLike,updateStatusDiv:this.updateStatusDiv,end_cursor:null,vueStatus:this,userName:this.userToLike,userId:this.viewerUserName===this.userToLike?this.viewerUserId:"",hashTag:this.hashTagToLike});t.resolveUserName().then(()=>{liker.liked=0,liker.alreadyLiked=0,liker.skippedSuggestedUsers=0,liker.skippedVideo=0,liker.skippedOwnPosts=0,liker.skippedTooFewLike=0,liker.restarted=0,liker.fetched=0,liker.startDate=(new Date).toLocaleTimeString(),liker.stop=!1,liker.log="",liker.allPostsFetched=!1,liker.isInProgress=!0,liker.updateStatusDiv(`The interval between liking requests is ${liker.delay}ms`),liker.updateStatusDiv(e[liker.stopCriterion]),liker.updateStatusDiv("You can change the stop criteria during running the process"),this.periodStarted=Date.now(),liker.getPosts(t,!0)},()=>{alert("Specified user was not found"),t=null})}}});