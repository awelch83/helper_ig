const block=new Vue({el:"#app",created(){this.viewerUserId="",this.viewerUserName="",this.startDate=null},mounted:()=>{_gaq.push(["_trackPageview"]),chrome.runtime.onMessage.addListener(e=>{"openMassBlockPage"===e.action&&(block.delay=e.followDelay,block.delay<1e4&&(block.delay=1e4),block.viewerUserName=e.viewerUserName,block.viewerUserId=e.viewerUserId,block.csrfToken=e.csrfToken)})},data:{isInProgress:!1,delay:0,rndDelay:30,stop:!1,status:"",statusColor:"",log:"",ids:""},computed:{startButtonDisabled(){return this.isInProgress},binding(){const e={};return this.$vuetify.breakpoint.mdAndUp&&(e.column=!0),e}},methods:{calcDelay(){const e=+Math.floor(Math.random()*this.delay*this.rndDelay/100)+ +this.delay;return this.updateStatusDiv(`Calculated delay ${e}ms`),e},checkDelay(){(!this.delay||this.delay<1e4)&&this.$nextTick(()=>this.delay=1e4)},checkRndDelay(){(!this.rndDelay||this.rndDelay<0)&&this.$nextTick(()=>this.rndDelay=0)},timeout:e=>new Promise(s=>setTimeout(s,e)),updateStatusDiv(e,s){this.log+=`${e}\n`,this.status=e,this.statusColor=s||"black",setTimeout(()=>{const e=document.getElementById("log_text_area");e.scrollTop=e.scrollHeight},0)},async blockButtonClick(e){this.isInProgress=!0;const{value:s}=document.getElementById("ids");this.processUsers=s.replace(/[\n\r]/g,",").split(","),this.blockedUsers=0,this.processedUsers=0,this.errorsResolvingUserId=0;for(let s=0;s<this.processUsers.length;s+=1)if(""!==this.processUsers[s]){this.updateStatusDiv(`Mass ${e}ing users: ${this.processUsers[s]}/${s+1} of ${this.processUsers.length}`);let t=this.processUsers[s];if(this.processedUsers+=1,!/^\d+$/.test(t)){this.updateStatusDiv(`${t} does not look as user id, maybe username, resolve username to userid`);try{t=(await instaUserInfo.getUserProfile({username:t,updateStatusDiv:this.updateStatusDiv,silent:!0,vueStatus:this})).id}catch(e){this.updateStatusDiv(`${t} error 404 resolving the username`),console.log("error resolving username to userid",t),this.errorsResolvingUserId+=1;continue}this.updateStatusDiv(`username resolved to ${t}`),await this.timeout(this.calcDelay())}const r=await blockUser.block({username:this.processUsers[s],userId:t,csrfToken:this.csrfToken,updateStatusDiv:this.updateStatusDiv,vueStatus:this,mode:e});console.log(r),"ok"===r?this.blockedUsers+=1:console.log(`Not recognized result - ${r}`),await this.timeout(this.calcDelay())}this.isInProgress=!1,this.updateStatusDiv(`Completed mass ${e}!\n          Processed: ${this.processedUsers}\n          Errors resolving username: ${this.errorsResolvingUserId}\n          ${e.charAt(0).toUpperCase()+e.slice(1)}ed: ${this.blockedUsers}`)}}});