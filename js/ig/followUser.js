var followUser=function(){};followUser.follow=function(e){"use strict";const{username:t,userId:s,csrfToken:o,updateStatusDiv:n,vueStatus:r}=e;return new Promise((e,t)=>{i(s,o,e,t)});function a(e,a,u){console.log(e);const l=e.response?e.response.status:0;if(l>0&&console.log(`error response data - ${JSON.stringify(e.response.data)}/${l}`),console.log(`Error making http request to follow ${t}, status - ${l}`),instaDefOptions.httpErrorMap.hasOwnProperty(l)){return console.log(`HTTP${l} error trying to follow the user.`,new Date),void function(e,t,a,u){n(e,"red"),instaTimeout.setTimeout(3e3).then(()=>instaCountdown.doCountdown("status",t,"Following",+(new Date).getTime()+instaDefOptions.retryInterval,r)).then(()=>{console.log("Continue execution after HTTP error",t,new Date),i(s,o,a,u)})}(instaMessages.getMessage(instaDefOptions.httpErrorMap[l],l,+instaDefOptions.retryInterval/6e4),l,a,u)}alert(instaMessages.getMessage("ERRFOLLOWUSER",t,l)),u()}function i(e,s,o,r){const i=`https://www.instagram.com/web/friendships/${e}/follow/`,u={headers:{"X-CSRFToken":s,"x-instagram-ajax":1,eferer:"https://www.instagram.com/"}};axios.post(i,"",u).then(e=>(function(e,s){n(`The request to follow ${t} was successful with response - ${e.result}`),s(e.result)})(e.data,o),e=>a(e,o,r))}},followUser.unFollow=function(e){"use strict";const{username:t,userId:s,csrfToken:o,updateStatusDiv:n,vueStatus:r}=e;return new Promise((e,t)=>{i(s,o,e,t)});function a(e,a,u){console.log(e);const l=e.response?e.response.status:0;if(l>0&&console.log(`error response data - ${JSON.stringify(e.response.data)}/${l}`),400===l&&e.response&&e.response.data&&""===e.response.data.message&&"fail"===e.response.data.status)return console.log("Seems we are trying to unfollow already not existing user, we will skip it."),void a(-1);if(console.log(`Error making http request to unfollow ${t}, status - ${l}`),instaDefOptions.httpErrorMap.hasOwnProperty(l)){return console.log(`HTTP${l} error trying to follow the user.`,new Date),void function(e,t,a,u){n(e,"red"),instaTimeout.setTimeout(3e3).then(()=>instaCountdown.doCountdown("status",t,"Unfollowing",+(new Date).getTime()+instaDefOptions.retryInterval,r)).then(()=>{console.log("Continue execution after HTTP error",t,new Date),i(s,o,a,u)})}(instaMessages.getMessage(instaDefOptions.httpErrorMap[l],l,+instaDefOptions.retryInterval/6e4),l,a,u)}alert(instaMessages.getMessage("ERRFOLLOWUSER",t,l)),u()}function i(e,s,o,r){const i=`https://www.instagram.com/web/friendships/${e}/unfollow/`,u={headers:{"X-CSRFToken":s,"x-instagram-ajax":1,eferer:"https://www.instagram.com/"}};axios.post(i,"",u).then(e=>(function(e,s){n(`The request to unfollow ${t} was successful with response - ${e.status}`),s(e.status)})(e.data,o),e=>a(e,o,r))}};